# @package benchmark
name: "Counting Actor"
params:
  messages: 1000000

# target specific configuration
targets:
  akka:
    jar: "${savina_path}/target/savina-0.0.1-SNAPSHOT-jar-with-dependencies.jar"
    class: "edu.rice.habanero.benchmarks.count.CountingAkkaActorBenchmark"
    run_args:
      messages: ["-n", "<value>"]
  caf:
    bin: "caf_02_count"
    run_args:
      messages: ["-n", "<value>"]
  lf-cpp:
    copy_sources:
      - "${bench_path}/Cpp/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/Cpp/Savina/src/micro"
    lf_file: "micro/Counting.lf"
    binary: "Counting"
    gen_args: null
    run_args:
      messages: ["--countTo", "<value>"]
  lf-c:
    copy_sources:
      - "${bench_path}/C/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/C/Savina/src/micro"
    lf_file: "micro/Counting.lf"
    binary: "Counting"
    gen_args:
      messages: ["-D", "countTo=<value>"]
  lf-uc:
    copy_sources:
      - "${bench_path}/uC/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/uC/Savina/src/savina.cmake"
      - "${bench_path}/uC/Savina/src/micro"
      - "${bench_path}/uC/Savina/src/lib"
    lf_file: "micro/Counting.lf"
    binary: "Counting"
    gen_args:
      messages: ["-D", "countTo=<value>"]
  lf-rust:
    copy_sources:
      - "${bench_path}/Rust/Savina/src/lib"
      - "${bench_path}/Rust/Savina/src/micro"
    lf_file: "micro/Counting.lf"
    binary: "counting"
    run_args:
      messages: ["--main-count-to", "<value>"]
  lf-ts:
    copy_sources:
      - "${bench_path}/TS/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/TS/Savina/src/micro"
    lf_file: "micro/CountingActor.lf"
    script: "src-gen/micro/CountingActor/dist/CountingActor.js"
    gen_args: null
    run_args:
      messages: ["--limit", "<value>"]
